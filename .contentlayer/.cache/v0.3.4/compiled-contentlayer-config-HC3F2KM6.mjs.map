{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import fs from \"fs\";\nimport path from \"path\";\n\nimport {\n  defineDocumentType,\n  makeSource,\n  ComputedFields,\n} from \"contentlayer/source-files\"; // eslint-disable-line\nimport rehypePrism from \"rehype-prism-plus\";\nimport rehypeSlug from \"rehype-slug\";\n\nconst getSlug = (doc: any) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\");\n\nconst blogComputedFields: ComputedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => getSlug(doc),\n  },\n  image: {\n    type: \"string\",\n    resolve: (doc) => {\n      const imagePath = path.join(\n        process.cwd(),\n        \"public\",\n        \"blog\",\n        `${getSlug(doc)}/image.png`,\n      );\n      return fs.existsSync(imagePath)\n        ? `/blog/${getSlug(doc)}/image.png`\n        : null;\n    },\n  },\n  og: {\n    type: \"string\",\n    resolve: (doc) => `/blog/${getSlug(doc)}/image.png`,\n  },\n};\n\nexport const Blog = defineDocumentType(() => ({\n  name: \"Blog\",\n  filePathPattern: `blog/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    summary: { type: \"string\", required: true },\n    date: { type: \"string\", required: true },\n    updatedAt: { type: \"string\", required: false },\n    tags: { type: \"json\", required: false },\n  },\n  computedFields: blogComputedFields,\n}));\n\nconst projectComputedFields: ComputedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => getSlug(doc),\n  },\n  image: {\n    type: \"string\",\n    resolve: (doc) => `/projects/${getSlug(doc)}/image.png`,\n  },\n};\n\nexport const Project = defineDocumentType(() => ({\n  name: \"Project\",\n  filePathPattern: `project/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    summary: { type: \"string\", required: true },\n    longSummary: { type: \"string\", required: false },\n    date: { type: \"string\", required: true },\n    url: { type: \"string\", required: false },\n    tags: { type: \"json\", required: false },\n  },\n  computedFields: projectComputedFields,\n}));\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Blog, Project],\n  mdx: {\n    rehypePlugins: [rehypePrism, rehypeSlug],\n  },\n});\n"],
  "mappings": ";AAAA,OAAO,QAAQ;AACf,OAAO,UAAU;AAEjB;AAAA,EACE;AAAA,EACA;AAAA,OAEK;AACP,OAAO,iBAAiB;AACxB,OAAO,gBAAgB;AAEvB,IAAM,UAAU,CAAC,QAAa,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAE1E,IAAM,qBAAqC;AAAA,EACzC,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,QAAQ,GAAG;AAAA,EAC/B;AAAA,EACA,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ;AAChB,YAAM,YAAY,KAAK;AAAA,QACrB,QAAQ,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,QACA,GAAG,QAAQ,GAAG,CAAC;AAAA,MACjB;AACA,aAAO,GAAG,WAAW,SAAS,IAC1B,SAAS,QAAQ,GAAG,CAAC,eACrB;AAAA,IACN;AAAA,EACF;AAAA,EACA,IAAI;AAAA,IACF,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,SAAS,QAAQ,GAAG,CAAC;AAAA,EACzC;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,WAAW,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC7C,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACxC;AAAA,EACA,gBAAgB;AAClB,EAAE;AAEF,IAAM,wBAAwC;AAAA,EAC5C,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,QAAQ,GAAG;AAAA,EAC/B;AAAA,EACA,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,aAAa,QAAQ,GAAG,CAAC;AAAA,EAC7C;AACF;AAEO,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,aAAa,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC/C,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,KAAK,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IACvC,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACxC;AAAA,EACA,gBAAgB;AAClB,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,OAAO;AAAA,EAC7B,KAAK;AAAA,IACH,eAAe,CAAC,aAAa,UAAU;AAAA,EACzC;AACF,CAAC;",
  "names": []
}
